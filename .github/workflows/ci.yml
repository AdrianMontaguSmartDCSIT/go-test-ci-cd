name: ci-tests

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # sast:
  #   uses: SmartDCSITlimited/actions-store/.github/workflows/SAST.yml@main

  # secret-detection:
  #   uses: SmartDCSITlimited/actions-store/.github/workflows/SecretDetection.yml@main

  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      package-dirs: ${{ steps.set-matrix.outputs.package_dirs }}
    steps:
      # Step to dynamically set the package-dir matrix
      - name: Find Go Modules
        id: set-matrix
        run: |
          dirs=$(find . -type d -mindepth 1 -maxdepth 1)  # List directories in root
          matrix_entries=()
          for dir in $dirs; do
            if [[ -f "$dir/go.mod" ]]; then
              matrix_entries+=("\"${dir#./}\"")
            fi
          done
          if [ ${#matrix_entries[@]} -gt 0 ]; then
            echo "package_dirs=[${matrix_entries[*]}]" >> $GITHUB_ENV
          else
            echo "package_dirs=[]" >> $GITHUB_ENV
          fi

  run-matrix:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.package_dirs != '[]' }}
    strategy:
      matrix:
        package-dir: ${{ fromJson(needs.setup.outputs.package_dirs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Run tests
        run: |
          cd ${{ matrix.package-dir }}
          gofmt -s -w .
          go vet ./...
          go mod tidy
          go build -o /dev/null ./...
          go test -v ./...